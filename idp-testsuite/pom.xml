<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.gematik.idp</groupId>
  <artifactId>idp-testsuite</artifactId>
  <version>29.0.2</version>
  <packaging>jar</packaging>

  <properties>
    <idp-server.spring.profile>idp</idp-server.spring.profile>
    <sektoral-idp.spring.profile>sektoralIdp</sektoral-idp.spring.profile>
    <version.build-helper-maven-plugin>3.6.0</version.build-helper-maven-plugin>
    <version.commons-lang3>3.17.0</version.commons-lang3>
    <version.maven-compiler-plugin>3.13.0</version.maven-compiler-plugin>
    <version.copy-rename-maven-plugin>1.0.1</version.copy-rename-maven-plugin>
    <java.version>21</java.version>
    <version.json>20240303</version.json>
    <version.maven-clean-plugin>3.4.0</version.maven-clean-plugin>
    <version.maven-failsafe-plugin>3.5.1</version.maven-failsafe-plugin>
    <version.maven-jar-plugin>3.4.2</version.maven-jar-plugin>
    <version.maven-javadoc-plugin>3.10.1</version.maven-javadoc-plugin>
    <version.maven-resources-plugin>3.3.1</version.maven-resources-plugin>
    <version.maven-source-plugin>3.3.1</version.maven-source-plugin>
    <version.maven-surefire-plugin>3.5.1</version.maven-surefire-plugin>
    <version.rest-assured>5.5.0</version.rest-assured>
    <version.slf4j-api>2.0.16</version.slf4j-api>
    <version.tiger>3.4.2</version.tiger>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.5.11</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- https://mvnrepository.com/artifact/org.json/json -->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${version.json}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>de.gematik.idp</groupId>
      <artifactId>idp-crypto</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.gematik.idp</groupId>
      <artifactId>idp-commons</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>de.gematik.idp</groupId>
          <artifactId>idp-crypto</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-jersey</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${version.commons-lang3}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.34</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${version.slf4j-api}</version>
    </dependency>
    <dependency>
      <groupId>org.skyscreamer</groupId>
      <artifactId>jsonassert</artifactId>
      <version>1.5.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.coderplus.maven.plugins</groupId>
      <artifactId>copy-rename-maven-plugin</artifactId>
      <version>${version.copy-rename-maven-plugin}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-artifact-manager</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-utils</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven</groupId>
          <artifactId>maven-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>de.gematik.test</groupId>
      <artifactId>tiger-test-lib</artifactId>
      <version>${version.tiger}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${version.rest-assured}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-xml</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-json</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine -->
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>5.11.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.maven-compiler-plugin}</version>
          <configuration>
            <encoding>UTF-8</encoding>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <debug>true</debug>
            <parameters>true</parameters>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.5.1</version>
          <configuration>
            <includes>
              <include>**/Driver*.java</include>
            </includes>
            <parallel>classes</parallel>
            <perCoreThreadCount>true</perCoreThreadCount>
            <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
            <skipITs>${skip.inttests}</skipITs>
            <systemPropertyVariables>
              <!--suppress UnresolvedMavenProperty -->
              <GEMATIK_TESTCONFIG>${gematik.testconfig}</GEMATIK_TESTCONFIG>
              <!--suppress UnresolvedMavenProperty -->
              <cucumber.filter.tags>@Approval and not @OpenBug and not @WiP and not @LongRunning
              </cucumber.filter.tags>
            </systemPropertyVariables>
            <classesDirectory>D:\repos\idp\idp-testsuite\target\classes</classesDirectory>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <classesDirectory>D:\repos\idp\idp-testsuite\target\classes</classesDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${version.maven-clean-plugin}</version>
        <configuration>
          <filesets>
            <!-- delete tiger config file -->
            <fileset>
              <directory>.</directory>
              <includes>
                <include>tiger.yaml</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <!-- =================== INITIALIZE PROPERTIES -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${version.build-helper-maven-plugin}</version>
        <executions>
          <execution>
            <id>init-build-properties</id>
            <goals>
              <goal>hostname</goal>
            </goals>
            <configuration>
              <hostnameProperty>testclient</hostnameProperty>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Workaround maven not being able to set a property conditionally based on environment variable -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <exportAntProperties>true</exportAntProperties>
              <target>
                <property environment="env"/>
                <!--suppress UnresolvedMavenProperty -->
                <condition else="default" property="gematik.testconfig"
                  value="${env.GEMATIK_TESTCONFIG}">
                  <isset property="env.GEMATIK_TESTCONFIG"/>
                </condition>
                <!--suppress UnresolvedMavenProperty -->
                <echo message="${gematik.testconfig}"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <files>
                <file>serenity.properties</file>
                <!--suppress UnresolvedMavenProperty -->
                <file>testsuite_config.${gematik.testconfig}.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- ===================  COMPILE UNIT TEST PACKAGE -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${version.maven-source-plugin}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${version.maven-jar-plugin}</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.maven-surefire-plugin}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!-- ===================  INTEGRATION TEST -->
      <!-- creates junit test driver classes in target/generated-test-sources
                 for multiple parallel batches run simultaneously
            -->
      <plugin>
        <groupId>de.gematik.test</groupId>
        <artifactId>tiger-maven-plugin</artifactId>
        <version>${version.tiger}</version>
        <executions>
          <execution>
            <id>generate-tiger-drivers</id>
            <goals>
              <goal>generate-drivers</goal>
            </goals>
            <phase>generate-test-sources</phase>
            <configuration>
              <glues>
                <package>de.gematik.idp.test.steps</package>
              </glues>
              <skip>false</skip>
            </configuration>
          </execution>
          <execution>
            <id>generate-tiger-report</id>
            <goals>
              <goal>generate-serenity-reports</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${version.maven-resources-plugin}</version>
        <executions>
          <execution>
            <id>default-resources</id>
            <goals>
              <goal>testResources</goal>
            </goals>
            <phase>generate-test-sources</phase>
            <configuration>
              <outputDirectory>${basedir}</outputDirectory>
              <useDefaultDelimiters>true</useDefaultDelimiters>
              <resources>
                <resource>
                  <directory>src/test/resources</directory>
                  <includes>
                    <include>tiger.yaml</include>
                    <include>tiger-jenkins.yaml</include>
                    <include>tiger-rise.yaml</include>
                    <include>tiger-rise-tu.yaml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>check-file-existence</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
              <skip>${skip.inttests}</skip>
              <executable>sh</executable>
              <arguments>
                <argument>-c</argument>
                <!-- verify that testsuite was executed and generates a report-->
                <argument>test -f ./target/site/serenity/index.html</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${version.maven-javadoc-plugin}</version>
        <configuration>
          <tags>
            <tag>
              <name>testenv</name>
              <placement>a</placement>
              <head>Testenvironment Variables:</head>
            </tag>
            <tag>
              <name>gematik.context.out</name>
              <placement>a</placement>
              <head>Context OUT:</head>
            </tag>
            <tag>
              <name>gematik.context.in</name>
              <placement>a</placement>
              <head>Context INPUT:</head>
            </tag>
          </tags>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.43.0</version>
        <configuration>
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>**/*.yml</include>
              </includes>
              <excludes>
                <exclude>**/target/**/*</exclude>
              </excludes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace/>
              <endWithNewline/>
              <indent>
                <spaces>true</spaces>
                <spacesPerTab>2</spacesPerTab>
              </indent>
            </format>
          </formats>

          <java>
            <toggleOffOn/>
            <googleJavaFormat>
              <version>${version.spotless.google-java-format}</version>
              <style>GOOGLE</style>
              <reflowLongStrings>true</reflowLongStrings>
            </googleJavaFormat>
          </java>
          <markdown>
            <includes>
              <include>**/*.md</include>
            </includes>
            <excludes>
              <exclude>**/target/**/*</exclude>
            </excludes>
          </markdown>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>local-idp-server</id>
      <!-- Profile to reserve ports, start IDP-Server and Sektoral-IDP for Integration Tests-->
      <activation>
        <property>
          <name>!env.IDP_SERVER</name>
        </property>
      </activation>
      <properties>
        <report.server.host>Local springboot instance</report.server.host>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.coderplus.maven.plugins</groupId>
            <artifactId>copy-rename-maven-plugin</artifactId>
            <version>${version.copy-rename-maven-plugin}</version>
            <executions>
              <execution>
                <id>copy-idp-server-config</id>
                <goals>
                  <goal>copy</goal>
                </goals>
                <phase>prepare-package</phase>
                <configuration>
                  <sourceFile>${basedir}/../idp-server/src/main/resources/application.yml
                  </sourceFile>
                  <destinationFile>
                    target/test-classes/application-${idp-server.spring.profile}.yml
                  </destinationFile>
                </configuration>
              </execution>
              <execution>
                <id>copy-sektoral-idp-config</id>
                <goals>
                  <goal>copy</goal>
                </goals>
                <phase>prepare-package</phase>
                <configuration>
                  <sourceFile>${basedir}/../idp-sektoral/src/main/resources/application.yml
                  </sourceFile>
                  <destinationFile>
                    target/test-classes/application-${sektoral-idp.spring.profile}.yml
                  </destinationFile>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${version.maven-failsafe-plugin}</version>
            <configuration>
              <environmentVariables>
                <tiger.idp.version>${project.version}</tiger.idp.version>
              </environmentVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>remote-idp-server</id>
      <activation>
        <property>
          <name>env.IDP_SERVER</name>
        </property>
      </activation>
      <properties>
        <profile.assembly.suffix>-online</profile.assembly.suffix>
        <report.server.host>${env.IDP_SERVER}</report.server.host>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${version.maven-failsafe-plugin}</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>

